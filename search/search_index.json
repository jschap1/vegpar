{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"vegpar I created the vegpar R package to work with vegetation parameters for the VIC model. I used it to compare VIC parameters among different VIC input datasets.","title":"Main"},{"location":"#vegpar","text":"I created the vegpar R package to work with vegetation parameters for the VIC model. I used it to compare VIC parameters among different VIC input datasets.","title":"vegpar"},{"location":"contact/","text":"See https://jschap1.github.io/","title":"Contact"},{"location":"license/","text":"Copyright 2020 Jacob Schaperow (\"MIT License\") Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"tutorial/","text":"vegpar demo This tutorial explains how I used vegpar to compare VIC vegetation parameters among different input datasets. Converting vegetation parameters from NetCDF format to Geotiff The latest version of the VIC model (VIC-5, image driver) uses NetCDF files as inputs. While these are easier to work with than the ASCII parameter files used in older version of the VIC model, users might still want to convert to Geotiff format for analysis, this being a very easy file type to work with in R thanks to the raster package. library(vegpar) # Define inputs and outputs # Name of VIC parameter file vegpar <- \"/hdd/Data/VICParametersGlobal/VICGlobal/v1.5/Image/ucrb_params_vicglobal.nc\" # File containing list of land cover class names class.list <- \"/media/jschap/PC_PART/HydrologyData/BV2019/igbp_classnames.txt\" # Directory where geotiffs should be saved geotiff.dir <- \"/home/jschap/Documents/Data/VICParametersGlobal/VICGlobal/Image/Vegetation\" classname <- read.table(class.list, stringsAsFactors = FALSE)[[1]] netcdf2raster(vegpar_name, \"LAI\", classname, geotiff.dir) netcdf2raster(vegpar_name, \"fcanopy\", classname, geotiff.dir) netcdf2raster(vegpar_name, \"Cv\", classname, geotiff.dir) Clipping the vegetation parameters to the basin mask # Directory where clipped geotiffs should be saved clipped.gtiff.dir <- \"/home/jschap/Documents/Data/VICParametersGlobal/VICGlobal/Image/Vegetation/clipped/\" # Basin mask ucrb_mask <- raster(\"/home/jschap/Documents/ESSD/data/colo_mask.tif\") system(paste0(\"mkdir \", clipped.gtiff.dir)) subset_vegpar(geotiff.dir, \"LAI\", classname, clipped.gtiff.dir, ucrb_mask) subset_vegpar(geotiff.dir, \"fcanopy\", classname, clipped.gtiff.dir, ucrb_mask) subset_vegpar(geotiff.dir, \"Cv\", classname, clipped.gtiff.dir, ucrb_mask, nt = 1) Calculating weighted-average vegetation parameters LAI <- stack_by_time(\"LAI\", clipped.gtiff.dir) FCAN <- stack_by_time(\"fcanopy\", clipped.gtiff.dir) cvnames <- list.files(clipped.gtiff.dir, pattern = glob2rx(\"Cv*.tif\"), full.names = TRUE) CV <- stack(cvnames) LAI_wt_avg <- vegpar_wt_avg(LAI, CV) fcan_wt_avg <- vegpar_wt_avg(FCAN, CV) Compute seasonal and annual average maps LAI_seasonal_avg <- vegpar_seasonal_avg(LAI_wt_avg) fcan_seasonal_avg <- vegpar_seasonal_avg(fcan_wt_avg) Compute average over basin avg_LAI_tab <- get_basin_avg(LAI_wt_avg) avg_fcan_tab <- get_basin_avg(fcan_wt_avg) dat <- data.frame(t = 1:12, month = month.name[1:12], LAI = avg_LAI_tab, fcan = avg_fcan_tab) Save results savedir <- \"/home/jschap/Documents/ESSD/vegpar_comparison/BV2019\" write.table(dat, file = file.path(savedir, \"tabulated_data.txt\"), row.names = FALSE) saveRDS(LAI_seasonal_avg, file = file.path(savedir, \"LAI_seasonal_avg.rds\")) saveRDS(fcan_seasonal_avg, file = file.path(savedir, \"fcan_seasonal_avg.rds\") )","title":"Demo"},{"location":"tutorial/#vegpar-demo","text":"This tutorial explains how I used vegpar to compare VIC vegetation parameters among different input datasets.","title":"vegpar demo"},{"location":"tutorial/#converting-vegetation-parameters-from-netcdf-format-to-geotiff","text":"The latest version of the VIC model (VIC-5, image driver) uses NetCDF files as inputs. While these are easier to work with than the ASCII parameter files used in older version of the VIC model, users might still want to convert to Geotiff format for analysis, this being a very easy file type to work with in R thanks to the raster package. library(vegpar) # Define inputs and outputs # Name of VIC parameter file vegpar <- \"/hdd/Data/VICParametersGlobal/VICGlobal/v1.5/Image/ucrb_params_vicglobal.nc\" # File containing list of land cover class names class.list <- \"/media/jschap/PC_PART/HydrologyData/BV2019/igbp_classnames.txt\" # Directory where geotiffs should be saved geotiff.dir <- \"/home/jschap/Documents/Data/VICParametersGlobal/VICGlobal/Image/Vegetation\" classname <- read.table(class.list, stringsAsFactors = FALSE)[[1]] netcdf2raster(vegpar_name, \"LAI\", classname, geotiff.dir) netcdf2raster(vegpar_name, \"fcanopy\", classname, geotiff.dir) netcdf2raster(vegpar_name, \"Cv\", classname, geotiff.dir)","title":"Converting vegetation parameters from NetCDF format to Geotiff"},{"location":"tutorial/#clipping-the-vegetation-parameters-to-the-basin-mask","text":"# Directory where clipped geotiffs should be saved clipped.gtiff.dir <- \"/home/jschap/Documents/Data/VICParametersGlobal/VICGlobal/Image/Vegetation/clipped/\" # Basin mask ucrb_mask <- raster(\"/home/jschap/Documents/ESSD/data/colo_mask.tif\") system(paste0(\"mkdir \", clipped.gtiff.dir)) subset_vegpar(geotiff.dir, \"LAI\", classname, clipped.gtiff.dir, ucrb_mask) subset_vegpar(geotiff.dir, \"fcanopy\", classname, clipped.gtiff.dir, ucrb_mask) subset_vegpar(geotiff.dir, \"Cv\", classname, clipped.gtiff.dir, ucrb_mask, nt = 1)","title":"Clipping the vegetation parameters to the basin mask"},{"location":"tutorial/#calculating-weighted-average-vegetation-parameters","text":"LAI <- stack_by_time(\"LAI\", clipped.gtiff.dir) FCAN <- stack_by_time(\"fcanopy\", clipped.gtiff.dir) cvnames <- list.files(clipped.gtiff.dir, pattern = glob2rx(\"Cv*.tif\"), full.names = TRUE) CV <- stack(cvnames) LAI_wt_avg <- vegpar_wt_avg(LAI, CV) fcan_wt_avg <- vegpar_wt_avg(FCAN, CV)","title":"Calculating weighted-average vegetation parameters"},{"location":"tutorial/#compute-seasonal-and-annual-average-maps","text":"LAI_seasonal_avg <- vegpar_seasonal_avg(LAI_wt_avg) fcan_seasonal_avg <- vegpar_seasonal_avg(fcan_wt_avg)","title":"Compute seasonal and annual average maps"},{"location":"tutorial/#compute-average-over-basin","text":"avg_LAI_tab <- get_basin_avg(LAI_wt_avg) avg_fcan_tab <- get_basin_avg(fcan_wt_avg) dat <- data.frame(t = 1:12, month = month.name[1:12], LAI = avg_LAI_tab, fcan = avg_fcan_tab)","title":"Compute average over basin"},{"location":"tutorial/#save-results","text":"savedir <- \"/home/jschap/Documents/ESSD/vegpar_comparison/BV2019\" write.table(dat, file = file.path(savedir, \"tabulated_data.txt\"), row.names = FALSE) saveRDS(LAI_seasonal_avg, file = file.path(savedir, \"LAI_seasonal_avg.rds\")) saveRDS(fcan_seasonal_avg, file = file.path(savedir, \"fcan_seasonal_avg.rds\") )","title":"Save results"},{"location":"veglib/","text":"Vegetation library file The vegetation library maps each land cover type to a set of vegetation parameters. I adapted the LDAS vegetation library from Cherkauer (1999) --- I can't find any online documentation for this file, but it is nearly the same as the vegetation library used by Livneh et al. (2013). I updated the old values of monthly LAI, fcanopy, and albedo with values estimated from recent MODIS data products. I set the architectural and minimum stomatal resistance parameters based on literature values. I left the rest of the parameters unmodified. Stomatal and architectural resistance The minimum stomatal resistance (rmin) and the architectural resistance (r0) play a role in how much plant transpiration occurs. Higher resistance means less transpiration. Stomatal resistance is resistance to the release of water through the plant stomata, and architectural resistance is the aerodynamic resistance between the leaves and the canopy top (Ducoudre et al., 1993). Two sets of resistance parameters have been used in past VIC implementations. Nijssen et al. (2001) ran VIC over the entire globe using rmin values adapted from Dorman and Sellers (1989)'s global database of rmin values computed using the Simple Biosphere Model (SiB, Sellers et al., 1986). N2001's r0 values were taken from Ducoudre et al. (1993)'s SECHIBA land surface parameterization. The other set of rmin and r0 parameters are those used in the LDAS vegetation library and in studies such as Livneh et al. (2013). This set of rmin values comes from Mao et al. (2007) and Mao and Cherkaur (2009). I could not find any documentation regarding the r0 values. For VICGlobal, I used the rmin values from SiB (Dorman and Sellers, 1989) and the r0 values from SECHIBA (Ducoudre et al., 1993) as they appear to be the best documented values. Defining snow-free cells I used the MODIS MOD10CM snow cover data product to calculate snow-free monthly average LAI, fractional canopy cover, and albedo for each IGBP land cover type for the year 2017. With the exception of the \"perennial snow and ice\" land cover, the vegetation parameters in the vegetation library are supposed to be for vegetation, not snow-covered vegetation. Therefore, before calculating albedo, fcanopy, and LAI for each land cover class, we need to exclude snow-covered pixels. First, I used the MODIS HDF-EOS to Geotiff ConversionTool (HEG) to convert the 2017 MOD10CM snow cover data to Geotiff format, then I used the MODIS QA band to exclude low-quality data from consideration. The 0 values in the QA band are considered good quality, while values like 250 (cloud), 253 (no decision), 254 (water), and 255 (fill) are not good quality. I excluded grid cells with nonzero QA values. library(vegpar) library(raster) # Load snow cover data snow.names <- list.files(\"/hdd/Data/MODIS_snow/geotiffs/\", pattern = glob2rx(\"*5km.tif\"), full.names = TRUE) qa.names <- list.files(\"/hdd/Data/MODIS_snow/geotiffs/\", pattern = glob2rx(\"*5km0.tif\"), full.names = TRUE) snowcover <- stack(snow.names) qa <- stack(qa.names) names(snowcover) <- month.name[1:12] names(qa) <- month.name[1:12] # Remove the no-data values snowcover <- reclassify(snowcover, cbind(100, Inf, NA)) # Remove poor quality data using the QA band for (j in 1:12) { bad.ind <- which(values(qa[[j]])!=0) snowcover[[j]][bad.ind] <- NA print(j) # display progress } snowcover is a list of rasters containing fractional snow cover in each month. Next, I loaded the MODIS MCD12C1 land cover data, and I resampled snow cover to match the resolution of the land cover data, which is already in the correct 1/16 degree coordinate system for VICGlobal. # Load land cover data cv.names <- list.files(\"/hdd/Data/VICParametersGlobal/VICGlobal/Vegetation_Fractions/Resampled_1_16/\", pattern = glob2rx(\"*.tif\"), full.names = TRUE) cv <- stack(cv.names) nclass <- nlayers(cv) lcnames <- vector(length = nclass) temp <- strsplit(names(cv), split = \"_fraction\") for (ii in 1:nclass) { lcnames[[ii]] <- temp[[ii]] } names(cv) <- lcnames # Project to match resolution (1/16) of the land cover data snowcover.proj <- projectRaster(snowcover, cv[[1]], method = \"bilinear\", progress = \"text\", file = \"/home/jschap/Documents/ESSD/data/monthly_snow_cover_2017.tif\") snowcover.proj is a raster brick of fractional snow cover data on the VICGlobal grid, with one layer for each month. I used this to create a mask of which pixels are majority snow-covered, as well as a mask of non-snow-covered pixels. I used 90% as the threshold for a pixel to be considered snow covered. I separated the snow masks by hemisphere. # Make polygons for the northern and southern hemispheres e_nh<- c(-180, 180, 0, 90) e_sh<- c(-180, 180, -90, 0) nh <- make_spatial_polygon(e_nh) sh <- make_spatial_polygon(e_sh) # Make mask of where the pixels are majority snow-covered thres <- 0.9 snow.maj <- reclassify(snowcover.proj, cbind(thres, Inf, 1), progress = \"text\") snow.maj <- reclassify(snow.maj, cbind(-Inf, thres, 0), right = FALSE, progress = \"text\") snow.maj.nh <- crop(snow.maj, nh) # invert_raster doesn't work well for a raster stack, so using reclassify instead: nosnow.maj.nh <- reclassify(snow.maj.nh, cbind(-0.5,0.5,2)) nosnow.maj.nh <- reclassify(nosnow.maj.nh, cbind(0.5,1.5,0)) nosnow.maj.nh <- reclassify(nosnow.maj.nh, cbind(1.5,2.5,1)) Albedo After creating raster masks of snow-free area, the next step is to use the albedo and land cover data products to calculate the average snow-free albedo for each land cover class, in each month. I used monthly 0.05 degree broadband albedo data from Dr. Shunlin Liang's research group at UMD. Data available here Load the monthly albedo data, crop it to the northern hemisphere, and apply the snow-free mask to keep only the albedo values for non-snow-covered pixels. albedo <- brick(\"/home/jschap/Documents/ESSD/codes/Vegetation_Fractions/monthly_average_albedo_2017.grd\") albedo <- calc(albedo, fun = function(x) {x/10000}) # scaling factor albedo.nh <- crop(albedo, nh) albedo.nosnow.nh <- mask(albedo.nh, nosnow.maj.nh, maskvalue = 0, prog = \"text\") Create a majority land cover raster than includes all pixels that are majority (at least 90%) a single land cover (not mixed). cv.nh <- crop(cv, nh, progress = \"text\") CVmaj.nh <- majority_raster(cv.nh, 0.9) For each land cover, make a mask of that land cover only, and calculate the average monthly albedo for that land cover type. I fixed albedo at 0.05 for water-covered area. lc.num <- 1 # repeat for each lc.num = 1, 2, ..., 17 lcnames[lc.num] cv.lc <- CVmaj.nh cv.lc[CVmaj.nh!=lc.num] <- NA cv.lc[!is.na(cv.lc)] <- 1 # Make a map of albedo, but only over the land cover type albedo.lc <- mask(albedo.nosnow.nh, cv.lc, prog=\"text\") # Calculate the mean over that land cover type mean.albedo.lc.nh <- colMeans(values(albedo.lc), na.rm = TRUE) # Write out the monthly albedo time series for the current land cover write.table(mean.albedo.lc.nh, file = \"/home/jschap/Documents/ESSD/codes/vegpars/albedo.txt\", quote = FALSE, col.names = FALSE, row.names = FALSE) Leaf-area index The calculations for snow-free LAI and fcanopy are similar to the albedo calculation. I obtained LAI data from GLASS . I used the snow-free mask and the majority land cover raster to calculate the average LAI for each land cover class in each month. Here is the code: # Load LAI data and crop to northern hemisphere lai <- brick(\"/home/jschap/Documents/ESSD/codes/Vegetation_Fractions/monthly_average_LAI_2017.grd\") lai <- reclassify(lai, cbind(100, Inf, NA), prog=\"text\") lai <- calc(lai, fun = function(x) {x/10}) # scaling factor lai.nh <- crop(lai, nh, prog=\"text\") # Mask out the snow-covered pixels lai.nosnow.nh <- mask(lai.nh, nosnow.maj.nh, maskvalue = 0, prog = \"text\") # For each land cover, calculate monthly average LAI lc.num <- 1 lcnames[lc.num] cv.lc <- CVmaj.nh cv.lc[CVmaj.nh!=lc.num] <- NA cv.lc[!is.na(cv.lc)] <- 1 # Make a map of LAI, but only over the land cover type lai.lc <- mask(lai.nosnow.nh, cv.lc, prog=\"text\") # Calculate the mean over that land cover type mean.lai.lc.nh <- colMeans(values(lai.lc), na.rm = TRUE) write.table(mean.lai.lc.nh, file = \"/home/jschap/Documents/ESSD/codes/vegpars/LAI.txt\", quote = FALSE, col.names = FALSE, row.names = FALSE) I set LAI to 0 for water-covered area and snow and ice. Fractional canopy cover Similar to albedo and LAI. I estimated fcanopy based on MODIS MCD13C2 NDVI using the same technique as Bohn and Vivoni (2019). # Load fcanopy data and crop to northern hemisphere fcan <- brick(\"/home/jschap/Documents/ESSD/codes/Vegetation_Fractions/monthly_average_fcan.grd\") fcan.nh <- crop(fcan, nh) fcan.nosnow.nh <- mask(fcan.nh, nosnow.maj.nh, maskvalue = 0, prog = \"text\") # Repeat for each land cover class = 1..17 lc.num <- 1 lcnames[lc.num] cv.lc <- CVmaj.nh cv.lc[CVmaj.nh!=lc.num] <- NA cv.lc[!is.na(cv.lc)] <- 1 plot(cv.lc, main = \"LC mask\") # Make a map of fcan, but only over the land cover type fcan.lc <- mask(fcan.nosnow.nh, cv.lc, prog=\"text\") plot(fcan.lc[[1]], main = lcnames[lc.num]) # Calculate the mean over that land cover type mean.fcan.lc.nh <- colMeans(values(fcan.lc), na.rm = TRUE) write.table(mean.fcan.lc.nh, file = \"/home/jschap/Documents/ESSD/codes/vegpars/fcan.txt\", quote = FALSE, col.names = FALSE, row.names = FALSE) I set fcanopy to 0.001 for water-covered area and snow and ice. References Bohn, T. J., & Vivoni, E. R. (2019). MOD-LSP, MODIS-based parameters for hydrologic modeling of North American land cover change. Scientific Data, 6(1), 144. https://doi.org/10.1038/s41597-019-0150-2 Dorman, J., & Sellers, P. J. (1989). A global climatology of albedo, rough-ness length and stomatal resistance for atmospheric general circulationmodels as represented by the Simple Biosphere Model (SiB).J. Appl.Meteor. Ducoudre, N. I., Laval, K., & Perrier, A. (1993). SECHIBA, a New Set of Param-eterizations of the Hydrologic Exchanges at the Land-Atmosphere Inter-face within the LMD Atmospheric General Circulation Model.Journalof Climate,6(2), 248\u2013273. https://doi.org/10.1175/1520- 0442(1993)006\u30080248:sansop\u30092.0.co;2 Livneh, B., Rosenberg, E. A., Lin, C., Nijssen, B., Mishra, V., Andreadis, K. M.,Maurer, E. P., & Lettenmaier, D. P. (2013). A long-term hydrologi-cally based dataset of land surface fluxes and states for the contermi-nous United States: Update and extensions.Journal of Climate,26(23),9384\u20139392. https://doi.org/10.1175/JCLI-D-12-00508.1 Mao, D., & Cherkauer, K. A. (2009). Impacts of land-use change on hydrologicresponses in the Great Lakes region.Journal of Hydrology,374(1-2),71\u201382. https://doi.org/10.1016/j.jhydrol.2009.06.016 Mao, D., Cherkauer, K. A., & Bowling, L. C. (2007). Improved vegetation properties for the estimation of evapotranspiration in the Midwestern UnitedStates., InAsabe annual international meeting Nijssen, B., Schnur, R., & Lettenmaier, D. P. (2001). Global retrospective es-timation of soil moisture using the variable infiltration capacity landsurface modl, 1980-93.Journal of Climate,14(8), 1790\u20131808. https ://doi.org/10.1175/1520-0442(2001)014\u30081790:GREOSM\u30092.0.CO;2 Sellers, P. J., Mintz, Y., Sud, Y. C., & Dalcher, A. (1986). A Simple BiosphereModel (SIB) for Use within General Circulation Models.Journal of theAtmospheric Sciences,43(6), 505\u2013531. https://doi.org/10.1175/1520-0469(1986)043\u30080505:ASBMFU\u30092.0.CO;2","title":"Vegetation library file"},{"location":"veglib/#vegetation-library-file","text":"The vegetation library maps each land cover type to a set of vegetation parameters. I adapted the LDAS vegetation library from Cherkauer (1999) --- I can't find any online documentation for this file, but it is nearly the same as the vegetation library used by Livneh et al. (2013). I updated the old values of monthly LAI, fcanopy, and albedo with values estimated from recent MODIS data products. I set the architectural and minimum stomatal resistance parameters based on literature values. I left the rest of the parameters unmodified.","title":"Vegetation library file"},{"location":"veglib/#stomatal-and-architectural-resistance","text":"The minimum stomatal resistance (rmin) and the architectural resistance (r0) play a role in how much plant transpiration occurs. Higher resistance means less transpiration. Stomatal resistance is resistance to the release of water through the plant stomata, and architectural resistance is the aerodynamic resistance between the leaves and the canopy top (Ducoudre et al., 1993). Two sets of resistance parameters have been used in past VIC implementations. Nijssen et al. (2001) ran VIC over the entire globe using rmin values adapted from Dorman and Sellers (1989)'s global database of rmin values computed using the Simple Biosphere Model (SiB, Sellers et al., 1986). N2001's r0 values were taken from Ducoudre et al. (1993)'s SECHIBA land surface parameterization. The other set of rmin and r0 parameters are those used in the LDAS vegetation library and in studies such as Livneh et al. (2013). This set of rmin values comes from Mao et al. (2007) and Mao and Cherkaur (2009). I could not find any documentation regarding the r0 values. For VICGlobal, I used the rmin values from SiB (Dorman and Sellers, 1989) and the r0 values from SECHIBA (Ducoudre et al., 1993) as they appear to be the best documented values.","title":"Stomatal and architectural resistance"},{"location":"veglib/#defining-snow-free-cells","text":"I used the MODIS MOD10CM snow cover data product to calculate snow-free monthly average LAI, fractional canopy cover, and albedo for each IGBP land cover type for the year 2017. With the exception of the \"perennial snow and ice\" land cover, the vegetation parameters in the vegetation library are supposed to be for vegetation, not snow-covered vegetation. Therefore, before calculating albedo, fcanopy, and LAI for each land cover class, we need to exclude snow-covered pixels. First, I used the MODIS HDF-EOS to Geotiff ConversionTool (HEG) to convert the 2017 MOD10CM snow cover data to Geotiff format, then I used the MODIS QA band to exclude low-quality data from consideration. The 0 values in the QA band are considered good quality, while values like 250 (cloud), 253 (no decision), 254 (water), and 255 (fill) are not good quality. I excluded grid cells with nonzero QA values. library(vegpar) library(raster) # Load snow cover data snow.names <- list.files(\"/hdd/Data/MODIS_snow/geotiffs/\", pattern = glob2rx(\"*5km.tif\"), full.names = TRUE) qa.names <- list.files(\"/hdd/Data/MODIS_snow/geotiffs/\", pattern = glob2rx(\"*5km0.tif\"), full.names = TRUE) snowcover <- stack(snow.names) qa <- stack(qa.names) names(snowcover) <- month.name[1:12] names(qa) <- month.name[1:12] # Remove the no-data values snowcover <- reclassify(snowcover, cbind(100, Inf, NA)) # Remove poor quality data using the QA band for (j in 1:12) { bad.ind <- which(values(qa[[j]])!=0) snowcover[[j]][bad.ind] <- NA print(j) # display progress } snowcover is a list of rasters containing fractional snow cover in each month. Next, I loaded the MODIS MCD12C1 land cover data, and I resampled snow cover to match the resolution of the land cover data, which is already in the correct 1/16 degree coordinate system for VICGlobal. # Load land cover data cv.names <- list.files(\"/hdd/Data/VICParametersGlobal/VICGlobal/Vegetation_Fractions/Resampled_1_16/\", pattern = glob2rx(\"*.tif\"), full.names = TRUE) cv <- stack(cv.names) nclass <- nlayers(cv) lcnames <- vector(length = nclass) temp <- strsplit(names(cv), split = \"_fraction\") for (ii in 1:nclass) { lcnames[[ii]] <- temp[[ii]] } names(cv) <- lcnames # Project to match resolution (1/16) of the land cover data snowcover.proj <- projectRaster(snowcover, cv[[1]], method = \"bilinear\", progress = \"text\", file = \"/home/jschap/Documents/ESSD/data/monthly_snow_cover_2017.tif\") snowcover.proj is a raster brick of fractional snow cover data on the VICGlobal grid, with one layer for each month. I used this to create a mask of which pixels are majority snow-covered, as well as a mask of non-snow-covered pixels. I used 90% as the threshold for a pixel to be considered snow covered. I separated the snow masks by hemisphere. # Make polygons for the northern and southern hemispheres e_nh<- c(-180, 180, 0, 90) e_sh<- c(-180, 180, -90, 0) nh <- make_spatial_polygon(e_nh) sh <- make_spatial_polygon(e_sh) # Make mask of where the pixels are majority snow-covered thres <- 0.9 snow.maj <- reclassify(snowcover.proj, cbind(thres, Inf, 1), progress = \"text\") snow.maj <- reclassify(snow.maj, cbind(-Inf, thres, 0), right = FALSE, progress = \"text\") snow.maj.nh <- crop(snow.maj, nh) # invert_raster doesn't work well for a raster stack, so using reclassify instead: nosnow.maj.nh <- reclassify(snow.maj.nh, cbind(-0.5,0.5,2)) nosnow.maj.nh <- reclassify(nosnow.maj.nh, cbind(0.5,1.5,0)) nosnow.maj.nh <- reclassify(nosnow.maj.nh, cbind(1.5,2.5,1))","title":"Defining snow-free cells"},{"location":"veglib/#albedo","text":"After creating raster masks of snow-free area, the next step is to use the albedo and land cover data products to calculate the average snow-free albedo for each land cover class, in each month. I used monthly 0.05 degree broadband albedo data from Dr. Shunlin Liang's research group at UMD. Data available here Load the monthly albedo data, crop it to the northern hemisphere, and apply the snow-free mask to keep only the albedo values for non-snow-covered pixels. albedo <- brick(\"/home/jschap/Documents/ESSD/codes/Vegetation_Fractions/monthly_average_albedo_2017.grd\") albedo <- calc(albedo, fun = function(x) {x/10000}) # scaling factor albedo.nh <- crop(albedo, nh) albedo.nosnow.nh <- mask(albedo.nh, nosnow.maj.nh, maskvalue = 0, prog = \"text\") Create a majority land cover raster than includes all pixels that are majority (at least 90%) a single land cover (not mixed). cv.nh <- crop(cv, nh, progress = \"text\") CVmaj.nh <- majority_raster(cv.nh, 0.9) For each land cover, make a mask of that land cover only, and calculate the average monthly albedo for that land cover type. I fixed albedo at 0.05 for water-covered area. lc.num <- 1 # repeat for each lc.num = 1, 2, ..., 17 lcnames[lc.num] cv.lc <- CVmaj.nh cv.lc[CVmaj.nh!=lc.num] <- NA cv.lc[!is.na(cv.lc)] <- 1 # Make a map of albedo, but only over the land cover type albedo.lc <- mask(albedo.nosnow.nh, cv.lc, prog=\"text\") # Calculate the mean over that land cover type mean.albedo.lc.nh <- colMeans(values(albedo.lc), na.rm = TRUE) # Write out the monthly albedo time series for the current land cover write.table(mean.albedo.lc.nh, file = \"/home/jschap/Documents/ESSD/codes/vegpars/albedo.txt\", quote = FALSE, col.names = FALSE, row.names = FALSE)","title":"Albedo"},{"location":"veglib/#leaf-area-index","text":"The calculations for snow-free LAI and fcanopy are similar to the albedo calculation. I obtained LAI data from GLASS . I used the snow-free mask and the majority land cover raster to calculate the average LAI for each land cover class in each month. Here is the code: # Load LAI data and crop to northern hemisphere lai <- brick(\"/home/jschap/Documents/ESSD/codes/Vegetation_Fractions/monthly_average_LAI_2017.grd\") lai <- reclassify(lai, cbind(100, Inf, NA), prog=\"text\") lai <- calc(lai, fun = function(x) {x/10}) # scaling factor lai.nh <- crop(lai, nh, prog=\"text\") # Mask out the snow-covered pixels lai.nosnow.nh <- mask(lai.nh, nosnow.maj.nh, maskvalue = 0, prog = \"text\") # For each land cover, calculate monthly average LAI lc.num <- 1 lcnames[lc.num] cv.lc <- CVmaj.nh cv.lc[CVmaj.nh!=lc.num] <- NA cv.lc[!is.na(cv.lc)] <- 1 # Make a map of LAI, but only over the land cover type lai.lc <- mask(lai.nosnow.nh, cv.lc, prog=\"text\") # Calculate the mean over that land cover type mean.lai.lc.nh <- colMeans(values(lai.lc), na.rm = TRUE) write.table(mean.lai.lc.nh, file = \"/home/jschap/Documents/ESSD/codes/vegpars/LAI.txt\", quote = FALSE, col.names = FALSE, row.names = FALSE) I set LAI to 0 for water-covered area and snow and ice.","title":"Leaf-area index"},{"location":"veglib/#fractional-canopy-cover","text":"Similar to albedo and LAI. I estimated fcanopy based on MODIS MCD13C2 NDVI using the same technique as Bohn and Vivoni (2019). # Load fcanopy data and crop to northern hemisphere fcan <- brick(\"/home/jschap/Documents/ESSD/codes/Vegetation_Fractions/monthly_average_fcan.grd\") fcan.nh <- crop(fcan, nh) fcan.nosnow.nh <- mask(fcan.nh, nosnow.maj.nh, maskvalue = 0, prog = \"text\") # Repeat for each land cover class = 1..17 lc.num <- 1 lcnames[lc.num] cv.lc <- CVmaj.nh cv.lc[CVmaj.nh!=lc.num] <- NA cv.lc[!is.na(cv.lc)] <- 1 plot(cv.lc, main = \"LC mask\") # Make a map of fcan, but only over the land cover type fcan.lc <- mask(fcan.nosnow.nh, cv.lc, prog=\"text\") plot(fcan.lc[[1]], main = lcnames[lc.num]) # Calculate the mean over that land cover type mean.fcan.lc.nh <- colMeans(values(fcan.lc), na.rm = TRUE) write.table(mean.fcan.lc.nh, file = \"/home/jschap/Documents/ESSD/codes/vegpars/fcan.txt\", quote = FALSE, col.names = FALSE, row.names = FALSE) I set fcanopy to 0.001 for water-covered area and snow and ice.","title":"Fractional canopy cover"},{"location":"veglib/#references","text":"Bohn, T. J., & Vivoni, E. R. (2019). MOD-LSP, MODIS-based parameters for hydrologic modeling of North American land cover change. Scientific Data, 6(1), 144. https://doi.org/10.1038/s41597-019-0150-2 Dorman, J., & Sellers, P. J. (1989). A global climatology of albedo, rough-ness length and stomatal resistance for atmospheric general circulationmodels as represented by the Simple Biosphere Model (SiB).J. Appl.Meteor. Ducoudre, N. I., Laval, K., & Perrier, A. (1993). SECHIBA, a New Set of Param-eterizations of the Hydrologic Exchanges at the Land-Atmosphere Inter-face within the LMD Atmospheric General Circulation Model.Journalof Climate,6(2), 248\u2013273. https://doi.org/10.1175/1520- 0442(1993)006\u30080248:sansop\u30092.0.co;2 Livneh, B., Rosenberg, E. A., Lin, C., Nijssen, B., Mishra, V., Andreadis, K. M.,Maurer, E. P., & Lettenmaier, D. P. (2013). A long-term hydrologi-cally based dataset of land surface fluxes and states for the contermi-nous United States: Update and extensions.Journal of Climate,26(23),9384\u20139392. https://doi.org/10.1175/JCLI-D-12-00508.1 Mao, D., & Cherkauer, K. A. (2009). Impacts of land-use change on hydrologicresponses in the Great Lakes region.Journal of Hydrology,374(1-2),71\u201382. https://doi.org/10.1016/j.jhydrol.2009.06.016 Mao, D., Cherkauer, K. A., & Bowling, L. C. (2007). Improved vegetation properties for the estimation of evapotranspiration in the Midwestern UnitedStates., InAsabe annual international meeting Nijssen, B., Schnur, R., & Lettenmaier, D. P. (2001). Global retrospective es-timation of soil moisture using the variable infiltration capacity landsurface modl, 1980-93.Journal of Climate,14(8), 1790\u20131808. https ://doi.org/10.1175/1520-0442(2001)014\u30081790:GREOSM\u30092.0.CO;2 Sellers, P. J., Mintz, Y., Sud, Y. C., & Dalcher, A. (1986). A Simple BiosphereModel (SIB) for Use within General Circulation Models.Journal of theAtmospheric Sciences,43(6), 505\u2013531. https://doi.org/10.1175/1520-0469(1986)043\u30080505:ASBMFU\u30092.0.CO;2","title":"References"},{"location":"vegpar/","text":"Vegetation parameter file The vegetation parameter file defines the fractional cover of each land cover type in each grid cell, as well as the depth of each root zone and the fraction of roots in each root zone. It can also optionally include time-varying leaf-area index (LAI), fractional canopy cover (fcanopy), and albedo, but it is simpler to describe these in the vegetation library file. Land cover types I used MODIS land cover data from the 0.05\u00b0 MODIS MCD12C1 Version 6 data product to assign a land cover type to each grid cell. MCD12C1 contains percent cover of each land cover class for three different land cover classification systems. I chose to use the IGBP LC classifications. While MCD12C1 observations are available from 2000-present, I chose to use observations from 2017 only because it was the most recent year with data in all of the MODIS-based datasets used for this study. I computed average values over all MODIS observations for the year. A future update to VICGlobal could incorporate multi-year vegetation climatology. Download MODIS data in hdf format. The data are annual average percent cover of each of 17 different IGBP land covers. Use nearest neighbor interpolation to resample the land cover data to 1/16 degree resolution. Write out Geotiff files with percent land cover data for each land cover class. Root zone depth and root fractions I calculated root fraction as a function of land cover class following the method of Zeng (2001) , who used a formula to calculate the root distribution vs. depth as a function of empirical parameters defined for each IGBP land cover type. Maximum root depths for each land cover type were taken from literature.","title":"Vegetation parameter file"},{"location":"vegpar/#vegetation-parameter-file","text":"The vegetation parameter file defines the fractional cover of each land cover type in each grid cell, as well as the depth of each root zone and the fraction of roots in each root zone. It can also optionally include time-varying leaf-area index (LAI), fractional canopy cover (fcanopy), and albedo, but it is simpler to describe these in the vegetation library file.","title":"Vegetation parameter file"},{"location":"vegpar/#land-cover-types","text":"I used MODIS land cover data from the 0.05\u00b0 MODIS MCD12C1 Version 6 data product to assign a land cover type to each grid cell. MCD12C1 contains percent cover of each land cover class for three different land cover classification systems. I chose to use the IGBP LC classifications. While MCD12C1 observations are available from 2000-present, I chose to use observations from 2017 only because it was the most recent year with data in all of the MODIS-based datasets used for this study. I computed average values over all MODIS observations for the year. A future update to VICGlobal could incorporate multi-year vegetation climatology. Download MODIS data in hdf format. The data are annual average percent cover of each of 17 different IGBP land covers. Use nearest neighbor interpolation to resample the land cover data to 1/16 degree resolution. Write out Geotiff files with percent land cover data for each land cover class.","title":"Land cover types"},{"location":"vegpar/#root-zone-depth-and-root-fractions","text":"I calculated root fraction as a function of land cover class following the method of Zeng (2001) , who used a formula to calculate the root distribution vs. depth as a function of empirical parameters defined for each IGBP land cover type. Maximum root depths for each land cover type were taken from literature.","title":"Root zone depth and root fractions"}]}